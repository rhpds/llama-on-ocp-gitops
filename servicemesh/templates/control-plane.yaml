{{ if and .Values.operator .Values.controlPlane.enabled -}}
{{ if .Values.controlPlane.create -}}
---
apiVersion: v1
kind: Namespace
metadata:
  name: {{ .Values.controlPlane.namespace }}
  annotations:
    argocd.argoproj.io/sync-wave: "2"
  labels:
    maistra.io/member-of: {{ .Values.controlPlane.namespace }}
{{- end }}
---
apiVersion: maistra.io/v2
kind: ServiceMeshControlPlane
metadata:
  name: {{ .Values.controlPlane.name }}
  namespace: {{ .Values.controlPlane.namespace }}
  annotations:
    argocd.argoproj.io/sync-wave: "3"
spec:
  version: {{ .Values.controlPlane.spec.version }}
  tracing:
    type: {{ .Values.controlPlane.spec.tracing.type }}
    sampling: {{ .Values.controlPlane.spec.tracing.sampling }}
  gateways:
    egress:
      enabled: {{ .Values.controlPlane.spec.gateways.egress.enabled }}
    ingress:
      enabled: {{ .Values.controlPlane.spec.gateways.ingress.enabled }}
  security:
    dataPlane:
      mtls: {{ .Values.controlPlane.spec.security.dataPlane.mtls }}
    controlPlane:
      mtls: {{ .Values.controlPlane.spec.security.controlPlane.mtls }}
  addons:
    jaeger:
      install:
        storage:
          type: {{ .Values.controlPlane.spec.addons.jaeger.install.storage.type }}
    prometheus:
      enabled: {{ .Values.controlPlane.spec.addons.prometheus.enabled }}
    kiali:
      enabled: {{ .Values.controlPlane.spec.addons.kiali.enabled }}
    grafana:
      enabled: {{ .Values.controlPlane.spec.addons.grafana.enabled }}
{{- end }}
